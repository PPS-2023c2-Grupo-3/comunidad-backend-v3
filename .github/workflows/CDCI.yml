name: CD-CI workflow
on:
  push:
    branches:
      - main
      - deploy
      - dev
  pull_request:
    branches:
      - main
      - deploy
      - dev
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses:  actions/checkout@v2
      - name: Build api
        run: |
          npm install
          npm run build
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build

      - name: Deploy to Render
        uses: renderinc/render-deploy-action@v1
        with:
          services: ${{ secrets.RENDER_SERVICES }}
          token: ${{ secrets.RENDER_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker Images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_IMAGE_TAG }}
